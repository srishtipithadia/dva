{"ast":null,"code":"var _jsxFileName = \"/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Tooltip as ReactTooltip } from 'react-tooltip';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Cell, LabelList, Label } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comparison = ({\n  feed1,\n  feed2\n}) => {\n  _s();\n  const [allData, setAllData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const metrics = [\"likes\", \"number_of_posts\", \"toxicity_score\", \"positivity_score\", \"subjectivity_score\", \"poster_diversity_score\", \"reverse_chrono_score\"];\n  const percentageMetrics = [\"toxicity_score\", \"positivity_score\", \"subjectivity_score\", \"poster_diversity_score\", \"reverse_chrono_score\"];\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"http://127.0.0.1:5000/api/normalized_data\").then(response => response.json()).then(data => {\n      console.log(\"Fetched Data:\", data);\n      setAllData(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 25\n  }, this);\n  if (!allData.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No data available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 33\n  }, this);\n  const getMetricDescription = metric => {\n    switch (metric) {\n      case \"likes\":\n        return \"The total number of likes received on posts.\";\n      case \"number_of_posts\":\n        return \"The total number of posts made by the feed.\";\n      case \"toxicity_score\":\n        return \"Measures the level of toxic language used in the posts.\";\n      case \"positivity_score\":\n        return \"Measures the positivity or optimism in the posts.\";\n      case \"subjectivity_score\":\n        return \"The proportion of posts with commercial links.\";\n      case \"poster_diversity_score\":\n        return \"The diversity of the users posting content.\";\n      case \"reverse_chrono_score\":\n        return \"idk\";\n      default:\n        return \"No description available.\";\n    }\n  };\n  const getColor = (uri, metric, allValues) => {\n    let scaledFeedData = allData.find(x => x.uri === uri) || {};\n    let value = scaledFeedData[metric];\n    if (value === undefined || !allValues.length) return \"white\";\n    const sorted = [...allValues].sort((a, b) => a - b);\n    const index = sorted.findIndex(v => v >= value);\n    const percentile = index / sorted.length * 100;\n    if (percentile >= 90) return \"#4caf50\";\n    if (percentile >= 80) return \"#81c784\";\n    if (percentile >= 60) return \"#ffeb3b\";\n    if (percentile >= 40) return \"#ff9800\";\n    if (percentile >= 20) return \"#f44336\";\n    return \"#e57373\";\n  };\n  const formatAsPercentage = value => {\n    if (value !== undefined) {\n      return `${(value * 100).toFixed(2)}%`;\n    }\n    return \"N/A\";\n  };\n  const capitalize = str => {\n    return String(str).charAt(0).toUpperCase() + String(str).slice(1);\n  };\n  const CustomBarLabel = ({\n    x,\n    y,\n    width,\n    value,\n    label\n  }) => {\n    if (value === 0 || value === undefined) return null;\n    return /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + width / 2,\n      y: y - 6,\n      fill: \"#333\",\n      textAnchor: \"middle\",\n      fontSize: \"12px\",\n      fontWeight: \"bold\",\n      color: \"#182451\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  };\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (!active || !payload || payload.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#fff\",\n        border: \"1px solid #ccc\",\n        padding: \"8px\",\n        borderRadius: \"6px\",\n        color: \"#182451\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          margin: 0,\n          padding: 0\n        },\n        children: payload.map((entry, index) => {\n          const feedLabel = entry.dataKey === \"feed1\" ? \"Feed 1\" : \"Feed 2\";\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              color: entry.color\n            },\n            children: [feedLabel, \": \", (entry.value * 100).toFixed(1), \"%\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"results-table\",\n      children: [feed1 && feed2 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: \"800px\",\n          textAlign: \"center\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: \"200px\"\n              },\n              children: \"Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"feed-title-circle\",\n                children: [\"Category: \", capitalize(feed1.topic)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"feed-title-circle\",\n                children: [\"Feed: \", capitalize(feed1.display_name)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"feed-title-circle\",\n                children: [\"Category: \", capitalize(feed2.topic)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"feed-title-circle\",\n                children: [\"Feed: \", capitalize(feed2.display_name)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: metrics.map(metric => {\n            const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n            const metricDescription = getMetricDescription(metric);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-tooltip-id\": metric,\n                \"data-tooltip-content\": metricDescription,\n                style: {\n                  cursor: 'pointer'\n                },\n                children: metric.replaceAll(\"_\", \" \")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"comparison-circle\",\n                  style: {\n                    backgroundColor: getColor(feed1.uri, metric, allMetricValues)\n                  },\n                  children: percentageMetrics.includes(metric) ? formatAsPercentage(feed1[metric]) : feed1[metric] !== undefined ? feed1[metric] : \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"comparison-circle\",\n                  style: {\n                    backgroundColor: getColor(feed2.uri, metric, allMetricValues)\n                  },\n                  children: percentageMetrics.includes(metric) ? formatAsPercentage(feed2[metric]) : feed2[metric] !== undefined ? feed2[metric] : \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 41\n              }, this)]\n            }, metric, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select two feeds to compare.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"likes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"number_of_posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"toxicity_score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"positivity_score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"subjectivity_score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"poster_diversity_score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"reverse_chrono_score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"results-bar-chart\",\n      children: feed1 && feed2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: \"18px\",\n            color: \"#182451\",\n            paddingBottom: \"30px\"\n          },\n          children: \"Metric Comparison (Normalized Percentile Scores)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 420,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: percentageMetrics.map(metric => {\n              var _metric, _metric2;\n              const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n              const val1 = (_metric = (allData.find(f => f.uri === feed1.uri) || {})[metric]) !== null && _metric !== void 0 ? _metric : 0;\n              const val2 = (_metric2 = (allData.find(f => f.uri === feed2.uri) || {})[metric]) !== null && _metric2 !== void 0 ? _metric2 : 0;\n              return {\n                name: metric.replaceAll(\"_\", \" \"),\n                metricKey: metric,\n                feed1: val1,\n                feed2: val2,\n                feed1Color: getColor(feed1.uri, metric + 2, allMetricValues),\n                feed2Color: getColor(feed2.uri, metric + 2, allMetricValues)\n              };\n            }),\n            margin: {\n              top: 20,\n              right: 30,\n              left: 40,\n              bottom: 40\n            },\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\",\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                value: \"Feed Metrics\",\n                position: \"bottom\",\n                offset: 20,\n                style: {\n                  textAnchor: \"middle\",\n                  fill: \"#182451\",\n                  fontSize: \"16px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              domain: [0, 1],\n              tickFormatter: tick => `${(tick * 100).toFixed(0)}%`,\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                value: \"Percentile Score\",\n                angle: -90,\n                position: \"insideLeft\",\n                style: {\n                  textAnchor: \"middle\",\n                  fill: \"#182451\",\n                  fontSize: \"16px\"\n                },\n                offset: -10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"feed1\",\n              isAnimationActive: false,\n              children: [metrics.map((metric, index) => {\n                const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n                return /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: getColor(feed1.uri, metric, allMetricValues)\n                }, `cell-feed1-${metric}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 49\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(LabelList, {\n                dataKey: \"feed1\",\n                content: /*#__PURE__*/_jsxDEV(CustomBarLabel, {\n                  label: \"Feed 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"feed2\",\n              isAnimationActive: false,\n              children: [metrics.map((metric, index) => {\n                const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n                return /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: getColor(feed2.uri, metric, allMetricValues)\n                }, `cell-feed2-${metric}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 49\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(LabelList, {\n                dataKey: \"feed2\",\n                content: /*#__PURE__*/_jsxDEV(CustomBarLabel, {\n                  label: \"Feed 2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n_s(Comparison, \"aZ4TYWdfcIwds090C7GFBWuYBCw=\");\n_c = Comparison;\nexport default Comparison;\nvar _c;\n$RefreshReg$(_c, \"Comparison\");","map":{"version":3,"names":["React","useState","useEffect","Tooltip","ReactTooltip","BarChart","Bar","XAxis","YAxis","ResponsiveContainer","Cell","LabelList","Label","jsxDEV","_jsxDEV","Comparison","feed1","feed2","_s","allData","setAllData","loading","setLoading","metrics","percentageMetrics","fetch","then","response","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","getMetricDescription","metric","getColor","uri","allValues","scaledFeedData","find","x","value","undefined","sorted","sort","a","b","index","findIndex","v","percentile","formatAsPercentage","toFixed","capitalize","str","String","charAt","toUpperCase","slice","CustomBarLabel","y","width","label","fill","textAnchor","fontSize","fontWeight","color","CustomTooltip","active","payload","style","background","border","padding","borderRadius","listStyle","margin","map","entry","feedLabel","dataKey","class","textAlign","borderCollapse","topic","display_name","allMetricValues","feed","filter","val","metricDescription","cursor","replaceAll","backgroundColor","includes","id","marginTop","paddingBottom","height","_metric","_metric2","val1","f","val2","name","metricKey","feed1Color","feed2Color","top","right","left","bottom","position","offset","domain","tickFormatter","tick","angle","content","isAnimationActive","_c","$RefreshReg$"],"sources":["/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Tooltip as ReactTooltip } from 'react-tooltip'; \nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Cell, LabelList, Label } from 'recharts';\n\nconst Comparison = ({ feed1, feed2 }) => {\n    const [allData, setAllData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const metrics = [\"likes\", \"number_of_posts\", \"toxicity_score\", \"positivity_score\", \"subjectivity_score\", \"poster_diversity_score\", \"reverse_chrono_score\"];\n    const percentageMetrics = [\"toxicity_score\", \"positivity_score\", \"subjectivity_score\", \"poster_diversity_score\", \"reverse_chrono_score\"];\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(\"http://127.0.0.1:5000/api/normalized_data\")\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Fetched Data:\", data);\n                setAllData(data);\n                setLoading(false);\n            })\n            .catch(error => {\n                console.error(\"Error fetching data:\", error);\n                setLoading(false);\n            });\n    }, []);\n\n    if (loading) return <p>Loading data...</p>;\n\n    if (!allData.length) return <p>No data available.</p>;\n\n    const getMetricDescription = (metric) => {\n        switch (metric) {\n            case \"likes\":\n                return \"The total number of likes received on posts.\";\n            case \"number_of_posts\":\n                return \"The total number of posts made by the feed.\";\n            case \"toxicity_score\":\n                return \"Measures the level of toxic language used in the posts.\";\n            case \"positivity_score\":\n                return \"Measures the positivity or optimism in the posts.\";\n            case \"subjectivity_score\":\n                return \"The proportion of posts with commercial links.\";\n            case \"poster_diversity_score\":\n                return \"The diversity of the users posting content.\";\n            case \"reverse_chrono_score\":\n                return \"idk\";\n            default:\n                return \"No description available.\";\n        }\n    };\n\n    const getColor = (uri, metric, allValues) => {\n        let scaledFeedData = allData.find(x => x.uri === uri) || {};\n        let value = scaledFeedData[metric];\n\n        if (value === undefined || !allValues.length) return \"white\"; \n\n        const sorted = [...allValues].sort((a, b) => a - b);\n        const index = sorted.findIndex(v => v >= value);\n        const percentile = (index / sorted.length) * 100;\n\n        if (percentile >= 90) return \"#4caf50\";\n        if (percentile >= 80) return \"#81c784\";\n        if (percentile >= 60) return \"#ffeb3b\";\n        if (percentile >= 40) return \"#ff9800\";\n        if (percentile >= 20) return \"#f44336\";\n        return \"#e57373\";\n    };\n\n    const formatAsPercentage = (value) => {\n        if (value !== undefined) {\n            return `${(value * 100).toFixed(2)}%`;\n        }\n        return \"N/A\";\n    };\n\n    const capitalize = (str) => {\n        return String(str).charAt(0).toUpperCase() + String(str).slice(1);\n    }\n\n    const CustomBarLabel = ({ x, y, width, value, label }) => {\n        if (value === 0 || value === undefined) return null;\n        return (\n            <text\n                x={x + width / 2}\n                y={y - 6}\n                fill=\"#333\"\n                textAnchor=\"middle\"\n                fontSize=\"12px\"\n                fontWeight=\"bold\"\n                color= \"#182451\" \n            >\n                {label}\n            </text>\n        );\n    };    \n\n    const CustomTooltip = ({ active, payload, label }) => {\n        if (!active || !payload || payload.length === 0) return null;\n    \n        return (\n            <div style={{ background: \"#fff\", border: \"1px solid #ccc\", padding: \"8px\", borderRadius: \"6px\", color: \"#182451\" }}>\n                <strong>{label}</strong>\n                <ul style={{ listStyle: \"none\", margin: 0, padding: 0 }}>\n                    {payload.map((entry, index) => {\n                        const feedLabel = entry.dataKey === \"feed1\" ? \"Feed 1\" : \"Feed 2\";\n                        return (\n                            <li key={index} style={{ color: entry.color }}>\n                                {feedLabel}: {(entry.value * 100).toFixed(1)}%\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <div class=\"results-table\">\n                {feed1 && feed2 ? (\n                    <table border=\"1\" style={{ width: \"800px\", textAlign: \"center\", borderCollapse: \"collapse\" }}>\n                        <thead>\n                            <tr>\n                                <th style={{width: \"200px\"}}>Metric</th>\n                                <th>\n                                    <div class=\"feed-title-circle\">Category: {capitalize(feed1.topic)}</div>\n                                    <div class=\"feed-title-circle\">Feed: {capitalize(feed1.display_name)}</div>\n                                </th>\n                                <th>\n                                    <div class=\"feed-title-circle\">Category: {capitalize(feed2.topic)}</div>\n                                    <div class=\"feed-title-circle\">Feed: {capitalize(feed2.display_name)}</div>\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {metrics.map(metric => {\n                                const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n                                const metricDescription = getMetricDescription(metric);\n\n                                return (\n                                    <tr key={metric}>\n                                        <td data-tooltip-id={metric} data-tooltip-content={metricDescription} style={{ cursor: 'pointer' }}>\n                                            {metric.replaceAll(\"_\", \" \")}\n                                        </td>\n                                        <td>\n                                            <div class=\"comparison-circle\" style={{ backgroundColor: getColor(feed1.uri, metric, allMetricValues) }}>\n                                                {percentageMetrics.includes(metric) ? \n                                                    formatAsPercentage(feed1[metric]) : \n                                                    feed1[metric] !== undefined ? feed1[metric] : \"N/A\"}\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <div class=\"comparison-circle\" style={{ backgroundColor: getColor(feed2.uri, metric, allMetricValues) }}>\n                                                {percentageMetrics.includes(metric) ? \n                                                    formatAsPercentage(feed2[metric]) : \n                                                    feed2[metric] !== undefined ? feed2[metric] : \"N/A\"}\n                                            </div>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </table>\n                ) : (\n                    <p>Please select two feeds to compare.</p>\n                )}\n\n                <ReactTooltip id=\"likes\" />\n                <ReactTooltip id=\"number_of_posts\" />\n                <ReactTooltip id=\"toxicity_score\" />\n                <ReactTooltip id=\"positivity_score\" />\n                <ReactTooltip id=\"subjectivity_score\" />\n                <ReactTooltip id=\"poster_diversity_score\" />\n                <ReactTooltip id=\"reverse_chrono_score\" />\n            </div>\n\n            <div class=\"results-bar-chart\">\n                {feed1 && feed2 && (\n                    <div style={{ marginTop: '40px' }}>\n                        <div style={{ textAlign: \"center\", fontSize: \"18px\", color: \"#182451\", paddingBottom: \"30px\" }}>\n                            Metric Comparison (Normalized Percentile Scores)\n                        </div>\n                        <ResponsiveContainer width=\"100%\" height={420}>\n                            <BarChart\n                                data={percentageMetrics.map(metric => {\n                                    const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n                                    const val1 = (allData.find(f => f.uri === feed1.uri) || {})[metric] ?? 0;\n                                    const val2 = (allData.find(f => f.uri === feed2.uri) || {})[metric] ?? 0;\n\n                                    return {\n                                        name: metric.replaceAll(\"_\", \" \"),\n                                        metricKey: metric,\n                                        feed1: val1,\n                                        feed2: val2,\n                                        feed1Color: getColor(feed1.uri, metric+2, allMetricValues),\n                                        feed2Color: getColor(feed2.uri, metric+2, allMetricValues)\n                                    };\n                                })}\n                                margin={{ top: 20, right: 30, left: 40, bottom: 40 }}\n                            >\n                                <XAxis dataKey=\"name\">\n                                    <Label value=\"Feed Metrics\" \n                                        position=\"bottom\" \n                                        offset={20} \n                                        style={{ textAnchor: \"middle\", fill: \"#182451\", fontSize: \"16px\" }}\n                                    />\n                                </XAxis>\n                                <YAxis\n                                    domain={[0, 1]}\n                                    tickFormatter={(tick) => `${(tick * 100).toFixed(0)}%`}\n                                    >\n                                    <Label\n                                        value=\"Percentile Score\"\n                                        angle={-90}\n                                        position=\"insideLeft\"\n                                        style={{ textAnchor: \"middle\", fill: \"#182451\", fontSize: \"16px\" }}\n                                        offset={-10}\n                                    />\n                                </YAxis>\n                                <Tooltip content={<CustomTooltip />} />\n\n                                { }\n                                <Bar dataKey=\"feed1\" isAnimationActive={false}>\n                                    {\n                                        metrics.map((metric, index) => {\n                                            const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n                                            return (\n                                                <Cell key={`cell-feed1-${metric}`} fill={getColor(feed1.uri, metric, allMetricValues)} />\n                                            );\n                                        })\n                                    }\n                                    <LabelList dataKey=\"feed1\" content={<CustomBarLabel label=\"Feed 1\" />} />\n                                </Bar>\n                                <Bar dataKey=\"feed2\" isAnimationActive={false}>\n                                    {\n                                        metrics.map((metric, index) => {\n                                            const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n                                            return (\n                                                <Cell key={`cell-feed2-${metric}`} fill={getColor(feed2.uri, metric, allMetricValues)} />\n                                            );\n                                        })\n                                    }\n                                    <LabelList dataKey=\"feed2\" content={<CustomBarLabel label=\"Feed 2\" />} />\n                                </Bar>\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Comparison;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}