{"ast":null,"code":"var _jsxFileName = \"/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Cell, LabelList, Text } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comparison = ({\n  feed1,\n  feed2\n}) => {\n  _s();\n  const [allData, setAllData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const metrics = [\"likes\", \"posts\", \"toxicity_score\", \"positivity_score\", \"commercial_link_score\", \"poster_diversity_score\"];\n  const percentageMetrics = [\"toxicity_score\", \"positivity_score\", \"commercial_link_score\", \"poster_diversity_score\"];\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"http://127.0.0.1:5000/api/normalized_data\").then(response => response.json()).then(data => {\n      console.log(\"Fetched Data:\", data);\n      setAllData(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 25\n  }, this);\n  if (!allData.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No data available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 33\n  }, this);\n  const getColor = (feedId, metric, allValues) => {\n    let scaledFeedData = allData.find(x => x.feed_id === feedId) || {};\n    let value = scaledFeedData[metric];\n    if (value === undefined || !allValues.length) return \"white\";\n    const sorted = [...allValues].sort((a, b) => a - b);\n    const index = sorted.findIndex(v => v >= value);\n    const percentile = index / sorted.length * 100;\n    if (percentile >= 90) return \"#4caf50\";\n    if (percentile >= 80) return \"#81c784\";\n    if (percentile >= 60) return \"#ffeb3b\";\n    if (percentile >= 40) return \"#ff9800\";\n    if (percentile >= 20) return \"#f44336\";\n    return \"#e57373\";\n  };\n  const formatAsPercentage = value => {\n    if (value !== undefined) {\n      return `${(value * 100).toFixed(2)}%`;\n    }\n    return \"N/A\";\n  };\n  const capitalize = str => {\n    return String(str).charAt(0).toUpperCase() + String(str).slice(1);\n  };\n  const CustomBarLabel = ({\n    x,\n    y,\n    width,\n    value,\n    label\n  }) => {\n    if (value === 0 || value === undefined) return null;\n    return /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + width / 2,\n      y: y - 6,\n      fill: \"#333\",\n      textAnchor: \"middle\",\n      fontSize: \"12px\",\n      fontWeight: \"bold\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"results-table\",\n      children: feed1 && feed2 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: \"700px\",\n          textAlign: \"center\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: \"200px\"\n              },\n              children: \"Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"feed-title-circle\",\n                children: [\"Category: \", capitalize(feed1.category)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"feed-title-circle\",\n                children: [\"Algorithm: \", capitalize(feed1.algorithm)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"feed-title-circle\",\n                children: [\"Category: \", capitalize(feed2.category)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"feed-title-circle\",\n                children: [\"Algorithm: \", capitalize(feed2.algorithm)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: metrics.map(metric => {\n            const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: metric.replaceAll(\"_\", \" \")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"comparison-circle\",\n                  style: {\n                    backgroundColor: getColor(feed1.feed_id, metric, allMetricValues)\n                  },\n                  children: percentageMetrics.includes(metric) ? formatAsPercentage(feed1[metric]) : feed1[metric] !== undefined ? feed1[metric] : \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"comparison-circle\",\n                  style: {\n                    backgroundColor: getColor(feed2.feed_id, metric, allMetricValues)\n                  },\n                  children: percentageMetrics.includes(metric) ? formatAsPercentage(feed2[metric]) : feed2[metric] !== undefined ? feed2[metric] : \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 41\n              }, this)]\n            }, metric, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select two feeds to compare.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"results-bar-chart\",\n      children: feed1 && feed2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          children: \"Metric Comparison (Normalized Percentile Scores)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 420,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: metrics.map(metric => {\n              var _metric, _metric2;\n              const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n              const val1 = (_metric = (allData.find(f => f.feed_id === feed1.feed_id) || {})[metric]) !== null && _metric !== void 0 ? _metric : 0;\n              const val2 = (_metric2 = (allData.find(f => f.feed_id === feed2.feed_id) || {})[metric]) !== null && _metric2 !== void 0 ? _metric2 : 0;\n              return {\n                name: metric.replaceAll(\"_\", \" \"),\n                metricKey: metric,\n                feed1: val1,\n                feed2: val2,\n                feed1Color: getColor(feed1.feed_id, metric, allMetricValues),\n                feed2Color: getColor(feed2.feed_id, metric, allMetricValues)\n              };\n            }),\n            margin: {\n              top: 20,\n              right: 30,\n              left: 40,\n              bottom: 40\n            },\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\",\n              angle: -30,\n              textAnchor: \"end\",\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                value: \"Feed Algorithm Metrics\",\n                position: \"bottom\",\n                offset: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              domain: [0, 1],\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                value: \"Percentile among all feeds\",\n                angle: -90,\n                position: \"insideLeft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              formatter: (value, name, props) => {\n                const feedLabel = name === \"feed1\" ? \"Feed 1\" : \"Feed 2\";\n                return [`${(value * 100).toFixed(1)}%`, feedLabel];\n              },\n              labelFormatter: label => `Metric: ${label}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"feed1\",\n              isAnimationActive: false,\n              children: [metrics.map((metric, index) => {\n                const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n                return /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: getColor(feed1.feed_id, metric, allMetricValues)\n                }, `cell-feed1-${metric}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 49\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(LabelList, {\n                dataKey: \"feed1\",\n                content: /*#__PURE__*/_jsxDEV(CustomBarLabel, {\n                  label: \"Feed 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"feed2\",\n              isAnimationActive: false,\n              children: [metrics.map((metric, index) => {\n                const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n                return /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: getColor(feed2.feed_id, metric, allMetricValues)\n                }, `cell-feed2-${metric}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 49\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(LabelList, {\n                dataKey: \"feed2\",\n                content: /*#__PURE__*/_jsxDEV(CustomBarLabel, {\n                  label: \"Feed 2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Comparison, \"aZ4TYWdfcIwds090C7GFBWuYBCw=\");\n_c = Comparison;\nexport default Comparison;\nvar _c;\n$RefreshReg$(_c, \"Comparison\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","Cell","LabelList","Text","jsxDEV","_jsxDEV","Comparison","feed1","feed2","_s","allData","setAllData","loading","setLoading","metrics","percentageMetrics","fetch","then","response","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","getColor","feedId","metric","allValues","scaledFeedData","find","x","feed_id","value","undefined","sorted","sort","a","b","index","findIndex","v","percentile","formatAsPercentage","toFixed","capitalize","str","String","charAt","toUpperCase","slice","CustomBarLabel","y","width","label","fill","textAnchor","fontSize","fontWeight","class","border","style","textAlign","borderCollapse","category","algorithm","map","allMetricValues","feed","filter","val","replaceAll","backgroundColor","includes","marginTop","height","_metric","_metric2","val1","f","val2","name","metricKey","feed1Color","feed2Color","margin","top","right","left","bottom","dataKey","angle","Label","position","offset","domain","formatter","props","feedLabel","labelFormatter","isAnimationActive","content","_c","$RefreshReg$"],"sources":["/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Cell, LabelList, Text } from 'recharts';\n\nconst Comparison = ({ feed1, feed2 }) => {\n    const [allData, setAllData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const metrics = [\"likes\", \"posts\", \"toxicity_score\", \"positivity_score\", \"commercial_link_score\", \"poster_diversity_score\"];\n    const percentageMetrics = [\"toxicity_score\", \"positivity_score\", \"commercial_link_score\", \"poster_diversity_score\"];\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(\"http://127.0.0.1:5000/api/normalized_data\")\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Fetched Data:\", data);\n                setAllData(data);\n                setLoading(false);\n            })\n            .catch(error => {\n                console.error(\"Error fetching data:\", error);\n                setLoading(false);\n            });\n    }, []);\n\n    if (loading) return <p>Loading data...</p>;\n\n    if (!allData.length) return <p>No data available.</p>;\n\n    const getColor = (feedId, metric, allValues) => {\n        let scaledFeedData = allData.find(x => x.feed_id === feedId) || {};\n        let value = scaledFeedData[metric];\n\n        if (value === undefined || !allValues.length) return \"white\"; \n\n        const sorted = [...allValues].sort((a, b) => a - b);\n        const index = sorted.findIndex(v => v >= value);\n        const percentile = (index / sorted.length) * 100;\n\n        if (percentile >= 90) return \"#4caf50\";\n        if (percentile >= 80) return \"#81c784\";\n        if (percentile >= 60) return \"#ffeb3b\";\n        if (percentile >= 40) return \"#ff9800\";\n        if (percentile >= 20) return \"#f44336\";\n        return \"#e57373\";\n    };\n\n    const formatAsPercentage = (value) => {\n        if (value !== undefined) {\n            return `${(value * 100).toFixed(2)}%`;\n        }\n        return \"N/A\";\n    };\n\n    const capitalize = (str) => {\n        return String(str).charAt(0).toUpperCase() + String(str).slice(1);\n    }\n\n    const CustomBarLabel = ({ x, y, width, value, label }) => {\n        if (value === 0 || value === undefined) return null;\n        return (\n            <text\n                x={x + width / 2}\n                y={y - 6}\n                fill=\"#333\"\n                textAnchor=\"middle\"\n                fontSize=\"12px\"\n                fontWeight=\"bold\"\n            >\n                {label}\n            </text>\n        );\n    };    \n\n    return (\n        <div>\n            <div class=\"results-table\">\n                {feed1 && feed2 ? (\n                    <table border=\"1\" style={{ width: \"700px\", textAlign: \"center\", borderCollapse: \"collapse\" }}>\n                        <thead>\n                            <tr>\n                                <th style={{width: \"200px\"}}>Metric</th>\n                                <th>\n                                    <div class=\"feed-title-circle\">Category: {capitalize(feed1.category)}</div>\n                                    <div class=\"feed-title-circle\">Algorithm: {capitalize(feed1.algorithm)}</div>\n                                </th>\n                                <th>\n                                    <div class=\"feed-title-circle\">Category: {capitalize(feed2.category)}</div>\n                                    <div class=\"feed-title-circle\">Algorithm: {capitalize(feed2.algorithm)}</div>\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {metrics.map(metric => {\n                                const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n\n                                return (\n                                    <tr key={metric}>\n                                        <td>{metric.replaceAll(\"_\", \" \")}</td>\n                                        <td>\n                                            <div class=\"comparison-circle\" style={{ backgroundColor: getColor(feed1.feed_id, metric, allMetricValues) }}>\n                                                {percentageMetrics.includes(metric) ? \n                                                    formatAsPercentage(feed1[metric]) : \n                                                    feed1[metric] !== undefined ? feed1[metric] : \"N/A\"}\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <div class=\"comparison-circle\" style={{ backgroundColor: getColor(feed2.feed_id, metric, allMetricValues) }}>\n                                                {percentageMetrics.includes(metric) ? \n                                                    formatAsPercentage(feed2[metric]) : \n                                                    feed2[metric] !== undefined ? feed2[metric] : \"N/A\"}\n                                            </div>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </table>\n                ) : (\n                    <p>Please select two feeds to compare.</p>\n                )}\n            </div>\n            <div class=\"results-bar-chart\">\n                {feed1 && feed2 && (\n                    <div style={{ marginTop: '40px' }}>\n                        <div style={{ textAlign: \"center\", fontSize: \"18px\", fontWeight: \"bold\" }}>\n                            Metric Comparison (Normalized Percentile Scores)\n                        </div>\n                        <ResponsiveContainer width=\"100%\" height={420}>\n                            <BarChart\n                                data={metrics.map(metric => {\n                                    const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n                                    const val1 = (allData.find(f => f.feed_id === feed1.feed_id) || {})[metric] ?? 0;\n                                    const val2 = (allData.find(f => f.feed_id === feed2.feed_id) || {})[metric] ?? 0;\n\n                                    return {\n                                        name: metric.replaceAll(\"_\", \" \"),\n                                        metricKey: metric,\n                                        feed1: val1,\n                                        feed2: val2,\n                                        feed1Color: getColor(feed1.feed_id, metric, allMetricValues),\n                                        feed2Color: getColor(feed2.feed_id, metric, allMetricValues)\n                                    };\n                                })}\n                                margin={{ top: 20, right: 30, left: 40, bottom: 40 }}\n                            >\n                                <XAxis dataKey=\"name\" angle={-30} textAnchor=\"end\">\n                                    <Label value=\"Feed Algorithm Metrics\" position=\"bottom\" offset={20} />\n                                </XAxis>\n                                <YAxis domain={[0, 1]}>\n                                    <Label value=\"Percentile among all feeds\" angle={-90} position=\"insideLeft\" />\n                                </YAxis>\n                                <Tooltip \n                                    formatter={(value, name, props) => {\n                                        const feedLabel = name === \"feed1\" ? \"Feed 1\" : \"Feed 2\";\n                                        return [`${(value * 100).toFixed(1)}%`, feedLabel];\n                                    }} \n                                    labelFormatter={(label) => `Metric: ${label}`}\n                                />\n                                {/* No legend here */}\n                                <Bar dataKey=\"feed1\" isAnimationActive={false}>\n                                    {\n                                        metrics.map((metric, index) => {\n                                            const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n                                            return (\n                                                <Cell key={`cell-feed1-${metric}`} fill={getColor(feed1.feed_id, metric, allMetricValues)} />\n                                            );\n                                        })\n                                    }\n                                    <LabelList dataKey=\"feed1\" content={<CustomBarLabel label=\"Feed 1\" />} />\n                                </Bar>\n                                <Bar dataKey=\"feed2\" isAnimationActive={false}>\n                                    {\n                                        metrics.map((metric, index) => {\n                                            const allMetricValues = allData.map(feed => feed[metric]).filter(val => val !== undefined);\n                                            return (\n                                                <Cell key={`cell-feed2-${metric}`} fill={getColor(feed2.feed_id, metric, allMetricValues)} />\n                                            );\n                                        })\n                                    }\n                                    <LabelList dataKey=\"feed2\" content={<CustomBarLabel label=\"Feed 2\" />} />\n                                </Bar>\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Comparison;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}