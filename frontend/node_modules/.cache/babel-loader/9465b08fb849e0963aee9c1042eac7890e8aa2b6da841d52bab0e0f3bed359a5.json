{"ast":null,"code":"var _jsxFileName = \"/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comparison = ({\n  feed1,\n  feed2\n}) => {\n  _s();\n  const [allData, setAllData] = useState([]);\n  const metrics = [\"likes\", \"posts\", \"toxicity_score\", \"positivity_score\", \"commercial_link_score\", \"poster_diversity_score\"];\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/api/normalized_data\").then(response => response.json())\n    // .then(data => setAllData(data))\n    .then(data => {\n      console.log(data);\n      setAllData(data);\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  useEffect(() => {\n    console.log(\"Feed1:\", feed1);\n    console.log(\"Feed2:\", feed2);\n    console.log(\"All:\", allData);\n  }, [feed1, feed2]);\n  const getColor = (value, metric) => {\n    if (!allData.length) return \"white\"; // Default color if data isn't loaded\n\n    // Get all values for the metric\n    const values = allData.map(feed => feed[metric]).sort((a, b) => a - b);\n    const index = values.indexOf(value);\n    const percentile = index / values.length * 100;\n\n    // Assign colors based on percentile range\n    if (percentile < 10) return \"#ffcccc\"; // Bottom 10% (red)\n    if (percentile < 30) return \"#ffebcc\"; // 10-30% (orange)\n    if (percentile < 50) return \"#ffffcc\"; // 30-50% (yellow)\n    if (percentile < 70) return \"#ccffcc\"; // 50-70% (light green)\n    if (percentile < 90) return \"#b3ffb3\"; // 70-90% (green)\n    return \"#99ff99\"; // Top 10% (dark green)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: feed1 && feed2 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        width: \"100%\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Metric\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: feed1.feed_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: feed2.feed_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: metrics.map(metric => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: metric.replace(\"_\", \" \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              backgroundColor: getColor(feed1[metric], metric)\n            },\n            children: feed1[metric]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              backgroundColor: getColor(feed2[metric], metric)\n            },\n            children: feed2[metric]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)]\n        }, metric, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select two feeds to compare.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Comparison, \"Ahn9hXcEMz9uXFZhyAt9xbs6EqI=\");\n_c = Comparison;\nexport default Comparison;\nvar _c;\n$RefreshReg$(_c, \"Comparison\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Comparison","feed1","feed2","_s","allData","setAllData","metrics","fetch","then","response","json","data","console","log","catch","error","getColor","value","metric","length","values","map","feed","sort","a","b","index","indexOf","percentile","children","border","style","width","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","feed_id","replace","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Comparison = ({ feed1, feed2 }) => {\n    const [allData, setAllData] = useState([]);\n    const metrics = [\"likes\", \"posts\", \"toxicity_score\", \"positivity_score\", \"commercial_link_score\", \"poster_diversity_score\"];\n\n    useEffect(() => {\n        fetch(\"http://127.0.0.1:5000/api/normalized_data\")\n            .then((response) => response.json())\n            // .then(data => setAllData(data))\n            .then(data => {\n                console.log(data);\n                setAllData(data);\n            })\n            .catch(error => console.error(\"Error fetching data:\", error));\n    }, []);\n\n    useEffect(() => {\n        console.log(\"Feed1:\", feed1);\n        console.log(\"Feed2:\", feed2);\n        console.log(\"All:\", allData);\n    }, [feed1, feed2]);\n\n    const getColor = (value, metric) => {\n        if (!allData.length) return \"white\"; // Default color if data isn't loaded\n\n        // Get all values for the metric\n        const values = allData.map(feed => feed[metric]).sort((a, b) => a - b);\n        const index = values.indexOf(value);\n        const percentile = (index / values.length) * 100;\n\n        // Assign colors based on percentile range\n        if (percentile < 10) return \"#ffcccc\";  // Bottom 10% (red)\n        if (percentile < 30) return \"#ffebcc\";  // 10-30% (orange)\n        if (percentile < 50) return \"#ffffcc\";  // 30-50% (yellow)\n        if (percentile < 70) return \"#ccffcc\";  // 50-70% (light green)\n        if (percentile < 90) return \"#b3ffb3\";  // 70-90% (green)\n        return \"#99ff99\"; // Top 10% (dark green)\n    };\n\n    return (\n        <div>\n            {feed1 && feed2 ? (\n                <table border=\"1\" style={{ width: \"100%\", textAlign: \"center\" }}>\n                    <thead>\n                        <tr>\n                            <th>Metric</th>\n                            <th>{feed1.feed_id}</th>\n                            <th>{feed2.feed_id}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {metrics.map(metric => (\n                            <tr key={metric}>\n                                <td>{metric.replace(\"_\", \" \")}</td>\n                                <td style={{ backgroundColor: getColor(feed1[metric], metric) }}>\n                                    {feed1[metric]}\n                                </td>\n                                <td style={{ backgroundColor: getColor(feed2[metric], metric) }}>\n                                    {feed2[metric]}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            ) : (\n                <p>Please select two feeds to compare.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Comparison;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}