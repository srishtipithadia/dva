{"ast":null,"code":"var _jsxFileName = \"/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Comparison.css'; // Import the CSS file\n\n// Helper function to calculate the percentile group\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getPercentileGroup = (value, data) => {\n  // Sort the data to calculate percentiles\n  const sortedData = data.slice().sort((a, b) => a - b);\n  const index = sortedData.indexOf(value);\n  const percentile = index / (sortedData.length - 1) * 100;\n\n  // Determine the percentile range\n  const group = Math.floor(percentile / 10); // 0-9 range for percentiles\n  const colors = ['red', 'orange', 'yellow', 'lightgreen', 'green', 'lightblue', 'blue', 'purple', 'violet', 'indigo'];\n  return colors[group];\n};\nconst Comparison = () => {\n  _s();\n  const [feeds, setFeeds] = useState([]);\n  const [selectedFeeds, setSelectedFeeds] = useState([]);\n\n  // Fetching data (same as before)\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/api/normalized_data\").then(res => res.json()).then(data => {\n      setFeeds(data.feeds);\n    }).catch(err => console.error(\"Error fetching data:\", err));\n  }, []);\n  const handleFeedSelect = feed => {\n    if (selectedFeeds.length < 2) {\n      setSelectedFeeds([...selectedFeeds, feed]);\n    }\n  };\n\n  // Extract metric values and sort them for percentile calculation\n  const metrics = ['toxicity_score', 'positivity_score', 'commercial_link_score', 'poster_diversity_score'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Select 2 Feeds to Compare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4\",\n      children: feeds.map((feed, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `feed-card ${selectedFeeds.includes(feed) ? 'selected' : ''}`,\n        onClick: () => handleFeedSelect(feed),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold\",\n          children: feed.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [feed.likes, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [feed.posts, \" Posts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), selectedFeeds.length === 2 && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Metric\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Feed 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Feed 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: metrics.map(metric => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: metric.replace(/_/g, ' ').toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              backgroundColor: getPercentileGroup(selectedFeeds[0][metric], feeds.map(f => f[metric]))\n            },\n            children: selectedFeeds[0][metric]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              backgroundColor: getPercentileGroup(selectedFeeds[1][metric], feeds.map(f => f[metric]))\n            },\n            children: selectedFeeds[1][metric]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, metric, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Comparison, \"lLQr1AM1pRxACVoQXlCEc0BktWM=\");\n_c = Comparison;\nexport default Comparison;\nvar _c;\n$RefreshReg$(_c, \"Comparison\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getPercentileGroup","value","data","sortedData","slice","sort","a","b","index","indexOf","percentile","length","group","Math","floor","colors","Comparison","_s","feeds","setFeeds","selectedFeeds","setSelectedFeeds","fetch","then","res","json","catch","err","console","error","handleFeedSelect","feed","metrics","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","includes","onClick","category","likes","posts","metric","replace","toUpperCase","style","backgroundColor","f","_c","$RefreshReg$"],"sources":["/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Comparison.css'; // Import the CSS file\n\n// Helper function to calculate the percentile group\nconst getPercentileGroup = (value, data) => {\n  // Sort the data to calculate percentiles\n  const sortedData = data.slice().sort((a, b) => a - b);\n  const index = sortedData.indexOf(value);\n  const percentile = (index / (sortedData.length - 1)) * 100;\n  \n  // Determine the percentile range\n  const group = Math.floor(percentile / 10);  // 0-9 range for percentiles\n  const colors = [\n    'red', 'orange', 'yellow', 'lightgreen', 'green', \n    'lightblue', 'blue', 'purple', 'violet', 'indigo'\n  ];\n  return colors[group];\n};\n\nconst Comparison = () => {\n  const [feeds, setFeeds] = useState([]);\n  const [selectedFeeds, setSelectedFeeds] = useState([]);\n\n  // Fetching data (same as before)\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/api/normalized_data\")\n      .then((res) => res.json())\n      .then((data) => {\n        setFeeds(data.feeds);\n      })\n      .catch((err) => console.error(\"Error fetching data:\", err));\n  }, []);\n\n  const handleFeedSelect = (feed) => {\n    if (selectedFeeds.length < 2) {\n      setSelectedFeeds([...selectedFeeds, feed]);\n    }\n  };\n\n  // Extract metric values and sort them for percentile calculation\n  const metrics = ['toxicity_score', 'positivity_score', 'commercial_link_score', 'poster_diversity_score'];\n\n  return (\n    <div>\n      <h1 className=\"text-xl font-bold mb-4\">Select 2 Feeds to Compare</h1>\n      <div className=\"flex space-x-4\">\n        {feeds.map((feed, index) => (\n          <div\n            key={index}\n            className={`feed-card ${selectedFeeds.includes(feed) ? 'selected' : ''}`}\n            onClick={() => handleFeedSelect(feed)}\n          >\n            <h2 className=\"text-lg font-semibold\">{feed.category}</h2>\n            <p>{feed.likes} Likes</p>\n            <p>{feed.posts} Posts</p>\n          </div>\n        ))}\n      </div>\n\n      {selectedFeeds.length === 2 && (\n        <table>\n          <thead>\n            <tr>\n              <th>Metric</th>\n              <th>Feed 1</th>\n              <th>Feed 2</th>\n            </tr>\n          </thead>\n          <tbody>\n            {metrics.map((metric) => (\n              <tr key={metric}>\n                <td>{metric.replace(/_/g, ' ').toUpperCase()}</td>\n                <td \n                  style={{\n                    backgroundColor: getPercentileGroup(selectedFeeds[0][metric], feeds.map(f => f[metric]))\n                  }}\n                >\n                  {selectedFeeds[0][metric]}\n                </td>\n                <td \n                  style={{\n                    backgroundColor: getPercentileGroup(selectedFeeds[1][metric], feeds.map(f => f[metric]))\n                  }}\n                >\n                  {selectedFeeds[1][metric]}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default Comparison;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB,CAAC,CAAC;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;EAC1C;EACA,MAAMC,UAAU,GAAGD,IAAI,CAACE,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;EACrD,MAAMC,KAAK,GAAGL,UAAU,CAACM,OAAO,CAACR,KAAK,CAAC;EACvC,MAAMS,UAAU,GAAIF,KAAK,IAAIL,UAAU,CAACQ,MAAM,GAAG,CAAC,CAAC,GAAI,GAAG;;EAE1D;EACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACJ,UAAU,GAAG,EAAE,CAAC,CAAC,CAAE;EAC5C,MAAMK,MAAM,GAAG,CACb,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,EAChD,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAClD;EACD,OAAOA,MAAM,CAACH,KAAK,CAAC;AACtB,CAAC;AAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACdyB,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAErB,IAAI,IAAK;MACdiB,QAAQ,CAACjB,IAAI,CAACgB,KAAK,CAAC;IACtB,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAIC,IAAI,IAAK;IACjC,IAAIX,aAAa,CAACT,MAAM,GAAG,CAAC,EAAE;MAC5BU,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEW,IAAI,CAAC,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG,CAAC,gBAAgB,EAAE,kBAAkB,EAAE,uBAAuB,EAAE,wBAAwB,CAAC;EAEzG,oBACEjC,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAImC,SAAS,EAAC,wBAAwB;MAAAD,QAAA,EAAC;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrEvC,OAAA;MAAKmC,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC5Bf,KAAK,CAACqB,GAAG,CAAC,CAACR,IAAI,EAAEvB,KAAK,kBACrBT,OAAA;QAEEmC,SAAS,EAAE,aAAad,aAAa,CAACoB,QAAQ,CAACT,IAAI,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;QACzEU,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACC,IAAI,CAAE;QAAAE,QAAA,gBAEtClC,OAAA;UAAImC,SAAS,EAAC,uBAAuB;UAAAD,QAAA,EAAEF,IAAI,CAACW;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1DvC,OAAA;UAAAkC,QAAA,GAAIF,IAAI,CAACY,KAAK,EAAC,QAAM;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzBvC,OAAA;UAAAkC,QAAA,GAAIF,IAAI,CAACa,KAAK,EAAC,QAAM;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GANpB9B,KAAK;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELlB,aAAa,CAACT,MAAM,KAAK,CAAC,iBACzBZ,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,eACElC,OAAA;UAAAkC,QAAA,gBACElC,OAAA;YAAAkC,QAAA,EAAI;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfvC,OAAA;YAAAkC,QAAA,EAAI;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfvC,OAAA;YAAAkC,QAAA,EAAI;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRvC,OAAA;QAAAkC,QAAA,EACGD,OAAO,CAACO,GAAG,CAAEM,MAAM,iBAClB9C,OAAA;UAAAkC,QAAA,gBACElC,OAAA;YAAAkC,QAAA,EAAKY,MAAM,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACC,WAAW,CAAC;UAAC;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClDvC,OAAA;YACEiD,KAAK,EAAE;cACLC,eAAe,EAAEjD,kBAAkB,CAACoB,aAAa,CAAC,CAAC,CAAC,CAACyB,MAAM,CAAC,EAAE3B,KAAK,CAACqB,GAAG,CAACW,CAAC,IAAIA,CAAC,CAACL,MAAM,CAAC,CAAC;YACzF,CAAE;YAAAZ,QAAA,EAEDb,aAAa,CAAC,CAAC,CAAC,CAACyB,MAAM;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,eACLvC,OAAA;YACEiD,KAAK,EAAE;cACLC,eAAe,EAAEjD,kBAAkB,CAACoB,aAAa,CAAC,CAAC,CAAC,CAACyB,MAAM,CAAC,EAAE3B,KAAK,CAACqB,GAAG,CAACW,CAAC,IAAIA,CAAC,CAACL,MAAM,CAAC,CAAC;YACzF,CAAE;YAAAZ,QAAA,EAEDb,aAAa,CAAC,CAAC,CAAC,CAACyB,MAAM;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA,GAfEO,MAAM;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBX,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1EID,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AA4EhB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}