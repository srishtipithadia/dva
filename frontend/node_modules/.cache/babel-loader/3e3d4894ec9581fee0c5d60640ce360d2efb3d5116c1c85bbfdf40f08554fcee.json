{"ast":null,"code":"var _jsxFileName = \"/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comparison = ({\n  feed1,\n  feed2\n}) => {\n  _s();\n  const [allData, setAllData] = useState([]);\n  const metrics = [\"likes\", \"posts\", \"toxicity_score\", \"positivity_score\", \"commercial_link_score\", \"poster_diversity_score\"];\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/api/normalized_data\").then(response => response.json())\n    // .then(data => setAllData(data))\n    .then(data => {\n      console.log(data);\n      setAllData(data);\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  useEffect(() => {\n    console.log(\"Feed1:\", feed1);\n    console.log(\"Feed2:\", feed2);\n    console.log(\"All:\", allData);\n  }, [feed1, feed2]);\n  const getColor = (feedId, metric, allValues) => {\n    let scaledFeedData = allData.find(x => x.feed_id == feedId);\n    console.log(scaledFeedData);\n    let value = scaledFeedData[metric];\n    if (!allValues.length) return \"white\";\n    const sorted = [...allValues].sort((a, b) => a - b);\n    const index = sorted.findIndex(v => v >= value);\n    const percentile = index / sorted.length * 100;\n    if (percentile >= 90) return \"darkgreen\";\n    if (percentile >= 80) return \"lightgreen\";\n    if (percentile >= 60) return \"yellow\";\n    if (percentile >= 40) return \"orange\";\n    if (percentile >= 20) return \"orangered\";\n    return \"red\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: feed1 && feed2 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        width: \"100%\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Metric\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: feed1.feed_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: feed2.feed_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: metrics.map(metric => {\n          const allMetricValues = allData.map(feed => feed[metric]);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: metric.replaceAll(\"_\", \" \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: getColor(feed1.feed_id, metric, allMetricValues)\n              },\n              children: feed1[metric].toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: getColor(feed2.feed_id, metric, allMetricValues)\n              },\n              children: feed2[metric].toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)]\n          }, metric, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select two feeds to compare.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Comparison, \"Ahn9hXcEMz9uXFZhyAt9xbs6EqI=\");\n_c = Comparison;\nexport default Comparison;\nvar _c;\n$RefreshReg$(_c, \"Comparison\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Comparison","feed1","feed2","_s","allData","setAllData","metrics","fetch","then","response","json","data","console","log","catch","error","getColor","feedId","metric","allValues","scaledFeedData","find","x","feed_id","value","length","sorted","sort","a","b","index","findIndex","v","percentile","children","border","style","width","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","map","allMetricValues","feed","replaceAll","backgroundColor","toFixed","_c","$RefreshReg$"],"sources":["/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Comparison = ({ feed1, feed2 }) => {\n    const [allData, setAllData] = useState([]);\n    const metrics = [\"likes\", \"posts\", \"toxicity_score\", \"positivity_score\", \"commercial_link_score\", \"poster_diversity_score\"];\n\n    useEffect(() => {\n        fetch(\"http://127.0.0.1:5000/api/normalized_data\")\n            .then((response) => response.json())\n            // .then(data => setAllData(data))\n            .then(data => {\n                console.log(data);\n                setAllData(data);\n            })\n            .catch(error => console.error(\"Error fetching data:\", error));\n    }, []);\n\n    useEffect(() => {\n        console.log(\"Feed1:\", feed1);\n        console.log(\"Feed2:\", feed2);\n        console.log(\"All:\", allData);\n    }, [feed1, feed2]);\n\n    const getColor = (feedId, metric, allValues) => {\n        let scaledFeedData = allData.find(x => x.feed_id == feedId);\n        console.log(scaledFeedData);\n        let value = scaledFeedData[metric];\n\n        if (!allValues.length) return \"white\";\n\n        const sorted = [...allValues].sort((a, b) => a - b);\n        const index = sorted.findIndex(v => v >= value);\n        \n        const percentile = (index / sorted.length) * 100;\n\n        if (percentile >= 90) return \"darkgreen\";\n        if (percentile >= 80) return \"lightgreen\";\n        if (percentile >= 60) return \"yellow\";\n        if (percentile >= 40) return \"orange\";\n        if (percentile >= 20) return \"orangered\";\n        return \"red\";\n    };\n\n    return (\n        <div>\n            {feed1 && feed2 ? (\n                <table border=\"1\" style={{ width: \"100%\", textAlign: \"center\" }}>\n                    <thead>\n                        <tr>\n                            <th>Metric</th>\n                            <th>{feed1.feed_id}</th>\n                            <th>{feed2.feed_id}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {metrics.map(metric => {\n                            const allMetricValues = allData.map(feed => feed[metric]);\n\n                            return (\n                                <tr key={metric}>\n                                    <td>{metric.replaceAll(\"_\", \" \")}</td>\n                                    <td style={{ backgroundColor: getColor(feed1.feed_id, metric, allMetricValues) }}>\n                                        {feed1[metric].toFixed(2)}\n                                    </td>\n                                    <td style={{ backgroundColor: getColor(feed2.feed_id, metric, allMetricValues) }}>\n                                        {feed2[metric].toFixed(2)}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            ) : (\n                <p>Please select two feeds to compare.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Comparison;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}