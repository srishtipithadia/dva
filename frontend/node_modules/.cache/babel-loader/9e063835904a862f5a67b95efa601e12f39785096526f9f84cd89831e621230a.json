{"ast":null,"code":"var _jsxFileName = \"/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Helper function to calculate percentile group\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getPercentileGroup = (value, data) => {\n  const sortedData = data.slice().sort((a, b) => a - b);\n  const index = sortedData.indexOf(value);\n  const percentile = index / (sortedData.length - 1) * 100;\n  const group = Math.floor(percentile / 10); // 0-9 range for percentiles\n  const colors = ['red', 'orange', 'yellow', 'lightgreen', 'green', 'lightblue', 'blue', 'purple', 'violet', 'indigo'];\n  return colors[group];\n};\nconst Comparison = ({\n  feed1,\n  feed2\n}) => {\n  _s();\n  const [allData, setAllData] = useState([]);\n  const metrics = [\"likes\", \"posts\", \"toxicity_score\", \"positivity_score\", \"commercial_link_score\", \"poster_diversity_score\"];\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/api/normalized_data\").then(response => {\n      console.log(response);\n      response.json();\n    }).then(data => setAllData(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  useEffect(() => {\n    console.log(\"Feed1:\", feed1);\n    console.log(\"Feed2:\", feed2);\n    console.log(\"All:\", allData);\n  }, [feed1, feed2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Comparison, \"Ahn9hXcEMz9uXFZhyAt9xbs6EqI=\");\n_c = Comparison;\nexport default Comparison;\nvar _c;\n$RefreshReg$(_c, \"Comparison\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getPercentileGroup","value","data","sortedData","slice","sort","a","b","index","indexOf","percentile","length","group","Math","floor","colors","Comparison","feed1","feed2","_s","allData","setAllData","metrics","fetch","then","response","console","log","json","catch","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/srishtipithadia/Documents/coding_projects/dva/frontend/src/components/Comparison.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Helper function to calculate percentile group\nconst getPercentileGroup = (value, data) => {\n    const sortedData = data.slice().sort((a, b) => a - b);\n    const index = sortedData.indexOf(value);\n    const percentile = (index / (sortedData.length - 1)) * 100;\n\n    const group = Math.floor(percentile / 10);  // 0-9 range for percentiles\n    const colors = [\n        'red', 'orange', 'yellow', 'lightgreen', 'green',\n        'lightblue', 'blue', 'purple', 'violet', 'indigo'\n    ];\n    return colors[group];\n};\n\nconst Comparison = ({ feed1, feed2 }) => {\n    const [allData, setAllData] = useState([]);\n    const metrics = [\"likes\", \"posts\", \"toxicity_score\", \"positivity_score\", \"commercial_link_score\", \"poster_diversity_score\"];\n\n    useEffect(() => {\n        fetch(\"http://127.0.0.1:5000/api/normalized_data\")\n            .then((response) => {\n                console.log(response);\n                response.json();\n            })\n            .then(data => setAllData(data))\n            .catch(error => console.error(\"Error fetching data:\", error));\n    }, []);\n\n    useEffect(() => {\n        console.log(\"Feed1:\", feed1);\n        console.log(\"Feed2:\", feed2);\n        console.log(\"All:\", allData);\n    }, [feed1, feed2]);\n\n  return (\n    <div>\n      {/* <h1>Select 2 Feeds to Compare</h1>\n      <div className=\"feed-selector\">\n        {feeds.map((feed, index) => (\n          <div\n            key={index}\n            className={`feed-card ${selectedFeeds.includes(feed) ? 'selected' : ''}`}\n            onClick={() => handleFeedSelect(feed)}\n          >\n            <h2>{feed.category}</h2>\n            <p>{feed.likes} Likes</p>\n            <p>{feed.posts} Posts</p>\n          </div>\n        ))}\n      </div>\n\n      {selectedFeeds.length === 2 && (\n        <table>\n          <thead>\n            <tr>\n              <th>Metric</th>\n              <th>Feed 1</th>\n              <th>Feed 2</th>\n            </tr>\n          </thead>\n          <tbody>\n            {metrics.map((metric) => (\n              <tr key={metric}>\n                <td>{metric.replace(/_/g, ' ').toUpperCase()}</td>\n                <td\n                  style={{\n                    backgroundColor: getPercentileGroup(\n                      selectedFeeds[0][metric],\n                      feeds.map(f => f[metric])\n                    ),\n                  }}\n                >\n                  {selectedFeeds[0][metric]}\n                </td>\n                <td\n                  style={{\n                    backgroundColor: getPercentileGroup(\n                      selectedFeeds[1][metric],\n                      feeds.map(f => f[metric])\n                    ),\n                  }}\n                >\n                  {selectedFeeds[1][metric]}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )} */}\n    </div>\n  );\n};\n\nexport default Comparison;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;EACxC,MAAMC,UAAU,GAAGD,IAAI,CAACE,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;EACrD,MAAMC,KAAK,GAAGL,UAAU,CAACM,OAAO,CAACR,KAAK,CAAC;EACvC,MAAMS,UAAU,GAAIF,KAAK,IAAIL,UAAU,CAACQ,MAAM,GAAG,CAAC,CAAC,GAAI,GAAG;EAE1D,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACJ,UAAU,GAAG,EAAE,CAAC,CAAC,CAAE;EAC5C,MAAMK,MAAM,GAAG,CACX,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,EAChD,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CACpD;EACD,OAAOA,MAAM,CAACH,KAAK,CAAC;AACxB,CAAC;AAED,MAAMI,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM0B,OAAO,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,uBAAuB,EAAE,wBAAwB,CAAC;EAE3HzB,SAAS,CAAC,MAAM;IACZ0B,KAAK,CAAC,2CAA2C,CAAC,CAC7CC,IAAI,CAAEC,QAAQ,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBA,QAAQ,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAACtB,IAAI,IAAImB,UAAU,CAACnB,IAAI,CAAC,CAAC,CAC9B2B,KAAK,CAACC,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAENjC,SAAS,CAAC,MAAM;IACZ6B,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEV,KAAK,CAAC;IAC5BS,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAET,KAAK,CAAC;IAC5BQ,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEP,OAAO,CAAC;EAChC,CAAC,EAAE,CAACH,KAAK,EAAEC,KAAK,CAAC,CAAC;EAEpB,oBACEnB,OAAA;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAsDK,CAAC;AAEV,CAAC;AAACf,EAAA,CA7EIH,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AA+EhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}